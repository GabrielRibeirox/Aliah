@model VaiCaralhoMVC.Models.Cadastrar

@{
	/**/

	Layout = "~/Views/Shared/_Layout.cshtml";
}

@*@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")*@

  <script type="text/javascript">

	$(document).ready(function () {

		function limpa_formulário_cep() {
			// Limpa valores do formulário de cep.
			$("#txtrua").val("");
			$("#txtbairro").val("");
			$("#txtcidade").val("");
			$("#txtestado").val("");
		}

		//Quando o campo cep perde o foco.
		$("#txtcep").blur(function () {

			//Nova variável "cep" somente com dígitos.
			var txtcep = $(this).val().replace(/\D/g, '');

			//Verifica se campo cep possui valor informado.
			if (txtcep != "") {

				//Expressão regular para validar o CEP.
				var validacep = /^[0-9]{8}$/;

				//Valida o formato do CEP.
				if (validacep.test(txtcep)) {

					//Preenche os campos com "..." enquanto consulta webservice.
					$("#txtrua").val("...");
					$("#txtbairro").val("...");
					$("#txtcidade").val("...");
					$("#txtestado").val("...");

					//Consulta o webservice viacep.com.br/
					$.getJSON("https://viacep.com.br/ws/" + txtcep + "/json/?callback=?", function (dados) {

						if (!("erro" in dados)) {
							//Atualiza os campos com os valores da consulta.
							$("#txtrua").val(dados.logradouro);
							$("#txtbairro").val(dados.bairro);
							$("#txtcidade").val(dados.localidade);
							$("#txtestado").val(dados.uf);
						} //end if.
						else {
							//CEP pesquisado não foi encontrado.
							limpa_formulário_cep();
							alert("CEP não encontrado.");
						}
					});
				} //end if.
				else {
					//cep é inválido.
					limpa_formulário_cep();
					alert("Formato de CEP inválido.");
				}
			} //end if.
			else {
				//cep sem valor, limpa formulário.
				limpa_formulário_cep();
			}
		});
	});

</script>


@using (Html.BeginForm())

{
	@Html.AntiForgeryToken()
	<section class="banner_area">
		<div class="banner_inner d-flex align-items-center">
			<div class="container">
				<div class="banner_content text-center">
					<h2>Faça seu cadastro!</h2>

				</div>
			</div>
		</div>
	</section>

    <div class="form-horizontal container w3-card-4 mt-3 mb-3">

        <div class="col-12 col-lg-10 ">
            <br />
            <h3>Informações pessoais</h3>
            <hr />
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-10 mb-4">
				<p>Nome*</p>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: João da Silva" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
            <br>
			<div class="col-md-4 mb-4">
				<p>CPF*</p>
				@Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control cpf", @placeholder = "Ex: xxx.xxx.xxx-xx" } })
				@Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
			</div>

			<div class="col-md-4 mb-4">
				<p>Data de nascimento*</p>
				@Html.EditorFor(model => model.Data_nascimento, new { htmlAttributes = new { @class = "form-control data", @placeholder = "Ex: 00/00/0000" } })
				@Html.ValidationMessageFor(model => model.Data_nascimento, "", new { @class = "text-danger" })
			</div>


			<div class="col-md-3 mb-4">
				<p>Sexo*</p>
				<div>
					<label>
						@Html.RadioButtonFor(model => model.Sexo, "masculino") Masculino
					</label>
					<label>
						@Html.RadioButtonFor(model => model.Sexo, "feminino") Feminino
					</label>
				</div>
				@*@Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: Masculino" } })*@
				@Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
			</div>



            <div class="col-md-5 mb-4">
                <label>Telefone</label>
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control telefone", @placeholder = "Ex: (00) 0000-0000" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>





            <div class="col-md-5 mb-4">
				<label>Celular*</label>
                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control telefonebr", @placeholder = "Ex: (00) 0 0000-0000" } })
                @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="col-12 col-lg-10 ">
            <br />
            <h3>Endereço</h3>
            <hr />
        </div>
        <div class="row">

			<div class="col-md-3 mb-3">
				<p>Cep*</p>
				@Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control cep", @placeholder = "Ex: 00000-000", @id = "txtcep" } })
				@Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
			</div>



			<div class="col-md-7 mb-3">
				<p>Rua*</p>
				@Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: João da Silva Santos", @id = "txtrua" } })
				@Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
			</div>


            <div class="col-md-2">
            </div>


			<div class="col-md-2">
				<p>Numero*</p>
				@Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nª 01", @id = "txtnumero" } })
				@Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
			</div>


			<div class="col-md-3 mb-3">
				<p>Bairro*</p>
				@Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: Centro", @id = "txtbairro" } })
				@Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
			</div>


			<div class="col-md-4 mb-4">
				<p>Cidade*</p>
				@Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: São Paulo", @id = "txtcidade" } })
				@Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
			</div>



			<div class="col-md-1 mb-2">
				<p>Estado*</p>
				@Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: SP", @id = "txtestado" } })
				@Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
			</div>

        </div>


        <div class="col-12 col-lg-10  mt-4">
            <br />
            <h3>Acesso:</h3>
            <hr />
        </div>
        <div class="row">
			<div class="col-md-10 mb-3">
				<p>Email*</p>
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: Joao@gmail.com" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
            <div class="col-md-5 mb-3">
                <label>&ensp; Senha</label>
                <i class="fa fa-info-circle" style="font-size:19px; color:rebeccapurple;" title="A senha precisa conter pelo menos uma letra maiúscula, uma minúscula e número."> </i>
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @placeholder = "********" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-5 mb-3">
                @Html.LabelFor(model => model.ConfirmaSenha, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control", @placeholder = "********" } })
                @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="primary_btn" />
            </div>

        </div>
        <br />
        <br />
    </div>


}

@*<div>
		@Html.ActionLink("Back to List", "Index")
	</div>*@
