@model VaiCaralhoMVC.Models.RedefinirSenha

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	//Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Redefinir</title>
</head>
<body>
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")


	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		<section class="banner_area">
			<div class="banner_inner d-flex align-items-center">
				<div class="container">
					<div class="banner_content text-center">
						<h2>Redefinir senha</h2>

					</div>
				</div>
			</div>
		</section>
		<div class="form-horizontal container w3-card-4 mt-3 mb-3">
			<div class="form-horizontal">
				<br />
				<h4>Preencha a senha desejada e confirme nos campos abaixo</h4>
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>
				</div>
				@Html.HiddenFor(model => model.Hash);
				@*<div class="form-group">
						@Html.LabelFor(model => model.Hash, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Hash, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Hash, "", new { @class = "text-danger" })
						</div>
					</div>*@

				<div class="form-group">
					@Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", placeholder = "******" } })
						@Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ConfirmaSenha, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control", placeholder = "******" } })
						@Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
					</div>
				</div>
				<br />
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Salvar" class="primary_btn" />
					</div>
				</div>
				<br />
				<br />
			</div>
	 </div>
			}

			@*<div>
				@Html.ActionLink("Back to List", "Index")
			</div>*@
	</body>
</html>
